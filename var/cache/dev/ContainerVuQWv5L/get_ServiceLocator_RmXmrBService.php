<?php

namespace ContainerVuQWv5L;


use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_RmXmrBService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.Rm_xmrB' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.Rm_xmrB'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'calendar' => ['privates', '.errored.UMAW1Rk', NULL, 'Cannot determine controller argument for "App\\Controller\\Admin\\AdminCalendarAddUserQuantityController::calendarAddUserQuantity()": the $calendar argument is type-hinted with the non-existent class or interface: "App\\Controller\\Admin\\Calendar". Did you forget to add a use statement?'],
            'dispatcher' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'sendMailService' => ['privates', 'App\\Service\\SendMailService', 'getSendMailServiceService', true],
        ], [
            'calendar' => '?',
            'dispatcher' => '?',
            'sendMailService' => 'App\\Service\\SendMailService',
        ]);
    }
}
