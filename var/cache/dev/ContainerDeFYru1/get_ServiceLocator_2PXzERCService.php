<?php

namespace ContainerDeFYru1;


use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_2PXzERCService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.2PXzERC' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.2PXzERC'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'UserRepository' => ['privates', 'App\\Repository\\UserRepository', 'getUserRepositoryService', true],
            'calendar' => ['privates', '.errored..service_locator.2PXzERC.App\\Entity\\Calendar', NULL, 'Cannot autowire service ".service_locator.2PXzERC": it references class "App\\Entity\\Calendar" but no such service exists. You should maybe alias this class to the existing "App\\Entity\\Activity" service.'],
            'calendarRepository' => ['privates', 'App\\Repository\\CalendarRepository', 'getCalendarRepositoryService', true],
            'formatdateService' => ['privates', 'App\\Service\\Formatdate', 'getFormatdateService', true],
            'purchaseItemRepository' => ['privates', 'App\\Repository\\PurchaseItemRepository', 'getPurchaseItemRepositoryService', true],
        ], [
            'UserRepository' => 'App\\Repository\\UserRepository',
            'calendar' => 'App\\Entity\\Calendar',
            'calendarRepository' => 'App\\Repository\\CalendarRepository',
            'formatdateService' => 'App\\Service\\Formatdate',
            'purchaseItemRepository' => 'App\\Repository\\PurchaseItemRepository',
        ]);
    }
}
